'\" t
.TH QWidgetPlugin 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QWidgetPlugin \- Abstract base for custom TQWidget plugins
.SH SYNOPSIS
\fC#include <ntqwidgetplugin.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQWidgetPlugin\fR ()"
.br
.ti -1c
.BI "\fB~QWidgetPlugin\fR ()"
.br
.ti -1c
.BI "virtual QStringList \fBkeys\fR () const = 0"
.br
.ti -1c
.BI "virtual TQWidget * \fBcreate\fR ( const TQString & key, TQWidget * parent = 0, const char * name = 0 ) = 0"
.br
.ti -1c
.BI "virtual TQString \fBgroup\fR ( const TQString & key ) const"
.br
.ti -1c
.BI "virtual QIconSet \fBiconSet\fR ( const TQString & key ) const"
.br
.ti -1c
.BI "virtual TQString \fBincludeFile\fR ( const TQString & key ) const"
.br
.ti -1c
.BI "virtual TQString \fBtoolTip\fR ( const TQString & key ) const"
.br
.ti -1c
.BI "virtual TQString \fBwhatsThis\fR ( const TQString & key ) const"
.br
.ti -1c
.BI "virtual bool \fBisContainer\fR ( const TQString & key ) const"
.br
.in -1c
.SH DESCRIPTION
The QWidgetPlugin class provides an abstract base for custom TQWidget plugins.
.PP
The widget plugin is a simple plugin interface that makes it easy to create custom widgets that can be included in forms using TQt Designer and used by applications.
.PP
Writing a widget plugin is achieved by subclassing this base class, reimplementing the pure virtual functions keys(), create(), group(), iconSet(), includeFile(), toolTip(), whatsThis() and isContainer(), and exporting the class with the \fCQ_EXPORT_PLUGIN\fR macro.
.PP
See the TQt Designer manual's, 'Creating Custom Widgets' section in the 'Creating Custom Widgets' chapter, for a complete example of a QWidgetPlugin.
.PP
See also the Plugins documentation and the QWidgetFactory class that is supplied with TQt Designer.
.PP
See also Plugins.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QWidgetPlugin::QWidgetPlugin ()"
Constructs a widget plugin. This is invoked automatically by the \fCQ_EXPORT_PLUGIN\fR macro.
.SH "QWidgetPlugin::~QWidgetPlugin ()"
Destroys the widget plugin.
.PP
You never have to call this explicitly. TQt destroys a plugin automatically when it is no longer used.
.SH "TQWidget * QWidgetPlugin::create ( const TQString & key, TQWidget * parent = 0, const char * name = 0 )\fC [pure virtual]\fR"
Creates and returns a TQWidget object for the widget key \fIkey\fR. The widget key is the class name of the required widget. The \fIname\fR and \fIparent\fR arguments are passed to the custom widget's constructor.
.PP
See also keys().
.SH "TQString QWidgetPlugin::group ( const TQString & key ) const\fC [virtual]\fR"
Returns the group (toolbar name) that the custom widget of class \fIkey\fR should be part of when \fIQt Designer\fR loads it.
.PP
The default implementation returns TQString::null.
.SH "QIconSet QWidgetPlugin::iconSet ( const TQString & key ) const\fC [virtual]\fR"
Returns the iconset that \fIQt Designer\fR should use to represent the custom widget of class \fIkey\fR in the toolbar.
.PP
The default implementation returns an null iconset.
.SH "TQString QWidgetPlugin::includeFile ( const TQString & key ) const\fC [virtual]\fR"
Returns the name of the include file that \fIQt Designer\fR and \fCuic\fR should use to include the custom widget of class \fIkey\fR in generated code.
.PP
The default implementation returns TQString::null.
.SH "bool QWidgetPlugin::isContainer ( const TQString & key ) const\fC [virtual]\fR"
Returns TRUE if the custom widget of class \fIkey\fR can contain other widgets, e.g. like QFrame; otherwise returns FALSE.
.PP
The default implementation returns FALSE.
.SH "QStringList QWidgetPlugin::keys () const\fC [pure virtual]\fR"
Returns the list of widget keys this plugin supports.
.PP
These keys must be the class names of the custom widgets that are implemented in the plugin.
.PP
See also create().
.SH "TQString QWidgetPlugin::toolTip ( const TQString & key ) const\fC [virtual]\fR"
Returns the text of the tooltip that \fIQt Designer\fR should use for the custom widget of class \fIkey\fR's toolbar button.
.PP
The default implementation returns TQString::null.
.SH "TQString QWidgetPlugin::whatsThis ( const TQString & key ) const\fC [virtual]\fR"
Returns the text of the whatsThis text that \fIQt Designer\fR should use when the user requests whatsThis help for the custom widget of class \fIkey\fR.
.PP
The default implementation returns TQString::null.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/ntqwidgetplugin.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive TQt documentation is provided in HTML format; it is
located at $TQTDIR/doc/html and can be read using TQt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (tqwidgetplugin.3qt) and the Qt
version (3.3.8).
